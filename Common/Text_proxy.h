



  
// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

#pragma once

#include "Text_common.h"

namespace SocialC2S
{
	class Proxy : public ::Proud::IRmiProxy
	{
	public:
	virtual bool RequestLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const String & villeName,  const bool & isNewVille) PN_SEALED; 
	virtual bool RequestLogon ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext,  const String & villeName,  const bool & isNewVille)   PN_SEALED;  
static const TCHAR* RmiName_RequestLogon;
static const TCHAR* RmiName_First;
		Proxy()
		{
			if(m_signature != 1)
				::Proud::ShowUserMisuseError(::Proud::ProxyBadSignatureErrorText);
		}

		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; } 
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};
}
namespace SocialS2C
{
	class Proxy : public ::Proud::IRmiProxy
	{
	public:
	virtual bool ReplyLogon ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ,  const int & result,  const String & comment) PN_SEALED; 
	virtual bool ReplyLogon ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext,  const int & result,  const String & comment)   PN_SEALED;  
static const TCHAR* RmiName_ReplyLogon;
static const TCHAR* RmiName_First;
		Proxy()
		{
			if(m_signature != 1)
				::Proud::ShowUserMisuseError(::Proud::ProxyBadSignatureErrorText);
		}

		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; } 
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};
}

